name: Build and publish container images

on:
  workflow_call:

    inputs:
      core:
        description: CMaNGOS Core Variant
        required: true
        type: string
      image:
        description: Container image to build
        required: true
        type: string
      image_tag:
        description: The tag of the image
        required: false
        type: string
        default: latest
      build_args:
        description: CMaNGOS build args
        required: false
        type: string
        default: ""
      core_hash:
        description: The commit hash
        required: false
        type: string
        default: HEAD

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/cmangos-${{ inputs.image }}-${{ inputs.core }}
          tags: type=raw,value=${{ inputs.image_tag }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: ./${{ inputs.image }}
          build-args: |
            CMANGOS_CORE=${{ inputs.core }}
            CORE_COMMIT_HASH=${{ inputs.core_hash }}
            ${{ inputs.build_args }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
