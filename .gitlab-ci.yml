stages:
  - build

default:
  image: docker:cli
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - export DATE_TAG="$(date +%Y.%m.%d)"
  after_script:
    - if [ "$CI_COMIT_BRANCH" != "$CI_DEFAULT_BRANCH" ]; then exit 0; fi
    - docker rmi "${IMAGE_NAME}:latest" "${IMAGE_NAME}:${DATE_TAG}" || true

variables:
  IMAGE_NAME: "$CI_REGISTRY_IMAGE/$IMAGE-$VARIANT"
  BUILD_ARGS: >-
    --build-arg CMANGOS_CORE=$VARIANT
    --build-arg REGISTRY=$CI_REGISTRY
    --label "org.opencontainers.image.source=${CI_PROJECT_URL}"

extractors:
  stage: build
  parallel:
    matrix:
      - VARIANT: [classic, tbc, wotlk]
  variables:
    IMAGE: extractors
  script:
    - |
      if [ "$CI_COMIT_BRANCH" != "$CI_DEFAULT_BRANCH" ]; then
        docker build ./$IMAGE --check
        exit 0
      fi
    - >-
      docker build ./$IMAGE --no-cache $BUILD_ARGS
      -t "${IMAGE_NAME}:latest"
      -t "${IMAGE_NAME}:${DATE_TAG}"
    - docker push "${IMAGE_NAME}:latest"
    - docker push "${IMAGE_NAME}:${DATE_TAG}"

realmd:
  stage: build
  parallel:
    matrix:
      - VARIANT: [classic, tbc, wotlk]
  variables:
    IMAGE: realmd
  script:
    - |
      if [ "$CI_COMIT_BRANCH" != "$CI_DEFAULT_BRANCH" ]; then
        docker build ./$IMAGE --check
        exit 0
      fi
    - >-
      docker build ./$IMAGE --no-cache $BUILD_ARGS
      -t "${IMAGE_NAME}:latest"
      -t "${IMAGE_NAME}:${DATE_TAG}"
    - docker push "${IMAGE_NAME}:latest"
    - docker push "${IMAGE_NAME}:${DATE_TAG}"

mangosd:
  stage: build
  parallel:
    matrix:
      - VARIANT: [classic, tbc, wotlk]
        TYPE: [default, ahbot, playerbot, ahbot-playerbot]
  variables:
    IMAGE: mangosd
  script:
    - |
      if [ "$CI_COMIT_BRANCH" != "$CI_DEFAULT_BRANCH" ]; then
        docker build ./$IMAGE --check
        exit 0
      fi
    - |
      case "$TYPE" in
        playerbot)
          BUILD_ARGS="$BUILD_ARGS --build-arg BUILD_PLAYERBOT=ON"
          IMAGE_NAME="$IMAGE_NAME-playerbot"
          ;;
        ahbot)
          BUILD_ARGS="$BUILD_ARGS --build-arg BUILD_AHBOT=ON"
          IMAGE_NAME="$IMAGE_NAME-ahbot"
          ;;
        ahbot-playerbot)
          BUILD_ARGS="$BUILD_ARGS --build-arg BUILD_PLAYERBOT=ON --build-arg BUILD_AHBOT=ON"
          IMAGE_NAME="$IMAGE_NAME-playerbot-ahbot"
          ;;
      esac
    - >-
      docker build ./$IMAGE --no-cache $BUILD_ARGS
      -t "${IMAGE_NAME}:latest"
      -t "${IMAGE_NAME}:${DATE_TAG}"
    - docker push "${IMAGE_NAME}:latest"
    - docker push "${IMAGE_NAME}:${DATE_TAG}"