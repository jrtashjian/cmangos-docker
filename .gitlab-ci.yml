image: registry.int.jrtashjian.com/jrtashjian/cmangos-docker/base-image

variables:
  CMANGOS_CORE: "classic"
  BUILD_LOGIN_SERVER: "ON"
  BUILD_PLAYERBOT: "OFF"
  BUILD_AHBOT: "OFF"
  BUILD_METRICS: "OFF"

stages:
  - build

compile:
  stage: build
  script:
    - git clone https://github.com/cmangos/mangos-$CMANGOS_CORE.git /opt/src/cmangos
    - mkdir -p /opt/src/cmangos/build
    - cd /opt/src/cmangos/build
    - cmake /opt/src/cmangos -DCMAKE_INSTALL_PREFIX=$HOME/cmangos -DBUILD_LOGIN_SERVER=$BUILD_LOGIN_SERVER -DBUILD_PLAYERBOT=$BUILD_PLAYERBOT -DBUILD_AHBOT=$BUILD_AHBOT -DBUILD_METRICS=$BUILD_METRICS
    - make -j $(nproc)
    - make install
  artifacts:
    paths:
      - $HOME/cmangos/
  only:
    - master  # Run the pipeline only on the master branch, adjust as needed


# build-extractors:
#   image: docker:cli
#   services:
#     - docker:dind
#   parallel:
#     matrix:
#       - CORE: classic
#       - CORE: tbc
#       - CORE: wotlk
#   variables:
#     DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE/extractors-$CORE:latest
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker build --no-cache -t $DOCKER_IMAGE_NAME ./extractors --build-arg CMANGOS_CORE=$CORE $BUILD_ARGS
#     - docker push $DOCKER_IMAGE_NAME

# build-realmd:
#   image: docker:cli
#   services:
#     - docker:dind
#   parallel:
#     matrix:
#       - CORE: classic
#       - CORE: tbc
#       - CORE: wotlk
#   variables:
#     DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE/realmd-$CORE:latest
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker build --no-cache -t $DOCKER_IMAGE_NAME ./realmd --build-arg CMANGOS_CORE=$CORE $BUILD_ARGS
#     - docker push $DOCKER_IMAGE_NAME

# build-mangosd:
#   image: docker:cli
#   services:
#     - docker:dind
#   parallel:
#     matrix:
#       - IMAGE_TAG: latest
#         CORE: [ classic, tbc, wotlk ]
#       - IMAGE_TAG: with-playerbot
#         CORE: [ classic, tbc, wotlk ]
#         BUILD_ARGS: --build-arg BUILD_PLAYERBOT=ON
#       - IMAGE_TAG: with-ahbot
#         CORE: [ classic, tbc, wotlk ]
#         BUILD_ARGS: --build-arg BUILD_AHBOT=ON
#       - IMAGE_TAG: with-playerbot-ahbot
#         CORE: [ classic, tbc, wotlk ]
#         BUILD_ARGS: --build-arg BUILD_PLAYERBOT=ON --build-arg BUILD_AHBOT=ON
#   variables:
#     DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE/mangosd-$CORE:$IMAGE_TAG
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker build --no-cache -t $DOCKER_IMAGE_NAME ./mangosd --build-arg CMANGOS_CORE=$CORE $BUILD_ARGS
#     - docker push $DOCKER_IMAGE_NAME