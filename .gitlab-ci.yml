stages:
  - validate
  - build

default:
  image: docker:cli
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin
    - export DATE_TAG="$(date +%Y.%m.%d)"
  after_script:
    - if [ $CI_COMIT_BRANCH != $CI_DEFAULT_BRANCH ]; then exit 0; fi
    - docker rmi $IMAGE_NAME:latest $IMAGE_NAME:$DATE_TAG || true

variables:
  IMAGE_NAME: "$CI_REGISTRY_IMAGE/$IMAGE-$VARIANT"
  BUILD_ARGS: >-
    --build-arg CMANGOS_CORE=$VARIANT
    --build-arg REGISTRY=$CI_REGISTRY
    --label org.opencontainers.image.source=$CI_PROJECT_URL

validate-dockerfiles:
  stage: validate
  parallel:
    matrix:
      - IMAGE: [extractors, realmd, mangosd]
  script:
    - docker build ./$IMAGE --check

extractors:
  stage: build
  parallel:
    matrix:
      - VARIANT: [classic, tbc, wotlk]
  variables:
    IMAGE: extractors
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - >-
      docker build ./$IMAGE --no-cache $BUILD_ARGS
      -t $IMAGE_NAME:latest
      -t $IMAGE_NAME:$DATE_TAG
    - docker push $IMAGE_NAME:latest
    - docker push $IMAGE_NAME:$DATE_TAG

realmd:
  stage: build
  parallel:
    matrix:
      - VARIANT: [classic, tbc, wotlk]
  variables:
    IMAGE: realmd
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - >-
      docker build ./$IMAGE --no-cache $BUILD_ARGS
      -t $IMAGE_NAME:latest
      -t $IMAGE_NAME:$DATE_TAG
    - docker push $IMAGE_NAME:latest
    - docker push $IMAGE_NAME:$DATE_TAG

mangosd:
  stage: build
  parallel:
    matrix:
      - VARIANT: [classic, tbc, wotlk]
        TYPE: [default, ahbot, playerbot, ahbot-playerbot]
  variables:
    IMAGE: mangosd
  resource_group: mangosd-$VARIANT
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - |
      case "$TYPE" in
        playerbot)
          BUILD_ARGS="$BUILD_ARGS --build-arg BUILD_PLAYERBOT=ON"
          IMAGE_NAME="$IMAGE_NAME-playerbot"
          ;;
        ahbot)
          BUILD_ARGS="$BUILD_ARGS --build-arg BUILD_AHBOT=ON"
          IMAGE_NAME="$IMAGE_NAME-ahbot"
          ;;
        ahbot-playerbot)
          BUILD_ARGS="$BUILD_ARGS --build-arg BUILD_PLAYERBOT=ON --build-arg BUILD_AHBOT=ON"
          IMAGE_NAME="$IMAGE_NAME-ahbot-playerbot"
          ;;
      esac
    - >-
      docker build ./$IMAGE --no-cache $BUILD_ARGS
      -t $IMAGE_NAME:latest
      -t $IMAGE_NAME:$DATE_TAG
    - docker push $IMAGE_NAME:latest
    - docker push $IMAGE_NAME:$DATE_TAG